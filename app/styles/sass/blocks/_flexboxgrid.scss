// Version 1.0.0

@import "_flex";

$debug: true;
$debug: false;

$grid-columns: 12 !default;
$gutter-width: 3% !default;
//$outer-margin: 3% !default;
$outer-margin: 30px !default;


// Name | Breakpoint | Container | Font size | Debug Color |   
$breakpoints:
  sm 767px 440px 2.3rem #C5E99B,
  md 991px 830px 2.5rem #58C9B9,
  lg 1350px 1300px 3rem #A593E0 !default;
$flexboxgrid-max-width: 1800px !default;
//$flexboxgrid-max-width: calc(100% - 1rem) !default;

//====================================================

$gutter-compensation: $gutter-width * .5 * -1;
$half-gutter-width: $gutter-width * .5;

.wrapper {
  box-sizing: border-box;
  //max-width: $flexboxgrid-max-width;
}

.container-fluid {
  //background-color: #ff0;
  //margin-right: auto;
  //margin-left: auto;
  //padding-right: $outer-margin;
  //padding-left: $outer-margin;
}

.row {
  //background-color: #095;
  box-sizing: border-box;
  @include flexbox();
  @include flex(0, 1, auto);
  @include flex-direction(row);
  @include flex-wrap(wrap);
  //margin-right: $gutter-compensation;
  //margin-left: $gutter-compensation;
}

.row.reverse {
  @include flex-direction(row-reverse);
}

.col.reverse {
  @include flex-direction(column-reverse);
}

.block{
  //margin-top: 100px;
}

@mixin flexboxgrid-sass-col-common {
  box-sizing: border-box;
  @include flex-grow(0);
  @include flex-shrink(0);
  padding-right: $half-gutter-width;
  padding-left: $half-gutter-width;
}

$name: xs;
.wrapper{
  //margin: 0.5rem auto 0 auto;
}
.container-fluid {
  //margin-right: auto;
  //margin-left: auto;
  //padding-right: 10px;
  //padding-left: 10px;
}
.col-#{$name} {
  @include flexboxgrid-sass-col-common;
  @include flex-basis(auto);
}
@for $i from 1 through $grid-columns {
  .col-#{$name}-#{$i} {
    @include flexboxgrid-sass-col-common;
    @include flex-basis(100% / $grid-columns * $i);
    max-width: 100% / $grid-columns * $i;
  }
  .col-#{$name}-#{$i} .box{
    @if $debug { 
      background-color: #F6B352;
      border-radius: 3px;
    }
  }
}
@for $i from 1 through $grid-columns {
  .col-#{$name}-offset-#{$i} {
    @include flexboxgrid-sass-col-common;
    margin-left: 100% / $grid-columns * $i;
  }
}
.col-#{$name} {
  @include flex-grow(1);
  @include flex-basis(0);
  max-width: 100%;
}
.start-#{$name} {
  @include justify-content(flex-start);
  text-align: start;
}

.center-#{$name} {
  @include justify-content(center);
  text-align: center;
}

.end-#{$name} {
  @include justify-content(flex-end);
  text-align: end;
}

.top-#{$name} {
  @include align-items(flex-start);
}

.middle-#{$name} {
  @include align-items(center);
}

.bottom-#{$name} {
  @include align-items(flex-end);
}

.around-#{$name} {
  @include justify-content(space-around);
}

.between-#{$name} {
  @include justify-content(space-between);
}

.first-#{$name} {
  order: -1;
}

.last-#{$name} {
  order: 1;
}


@each $breakpoint in $breakpoints {
  $name: nth($breakpoint, 1);
  $size: nth($breakpoint, 2);
  $container: nth($breakpoint, 3);
  $font: nth($breakpoint, 4);
  $color: nth($breakpoint, 5);
  @media only screen and (min-width: $size) {
    .container-fluid {
      //padding-right: $outer-margin;
      //padding-left: $outer-margin;
    }
    .wrapper{
      //margin: 1.3rem auto 0 auto;
    }
    .col-#{$name} {
      @include flexboxgrid-sass-col-common;
      @include flex-basis(auto);
    }
    @for $i from 1 through $grid-columns {
      .col-#{$name}-#{$i} {
        @include flexboxgrid-sass-col-common;
        @include flex-basis(100% / $grid-columns * $i);
        max-width: 100% / $grid-columns * $i;
      }
      .col-#{$name}-#{$i} .box{
        @if $debug { 
          background-color: $color;
          border-radius: 3px;
        }
      }
    }
    @for $i from 1 through $grid-columns {
      .col-#{$name}-offset-#{$i} {
        @include flexboxgrid-sass-col-common;
        margin-left: 100% / $grid-columns * $i
      }
    }
    .col-#{$name}-offset-0{
      margin-left: 0; 
    }
    .col-#{$name} {
      @include flex-grow(1);
      @include flex-basis(0);
      max-width: 100%;
    }
    .start-#{$name} {
      @include justify-content(flex-start);
      text-align: start;
    }

    .center-#{$name} {
      @include justify-content(center);
      text-align: center;
    }

    .end-#{$name} {
      @include justify-content(flex-end);
      text-align: end;
    }

    .top-#{$name} {
      @include align-items(flex-start);
    }

    .middle-#{$name} {
      @include align-items(center);
    }

    .bottom-#{$name} {
      @include align-items(flex-end);
    }

    .around-#{$name} {
      @include justify-content(space-around);
    }

    .between-#{$name} {
      @include justify-content(space-between);
    }

    .first-#{$name} {
      order: -1;
    }

    .last-#{$name} {
      order: 1;
    }
  }
}
